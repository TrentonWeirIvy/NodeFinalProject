<html lang="en">
<%- include("./partials/head.ejs") %>

  <body>
    <%- include("./partials/nav.ejs") %>

      <div class="content container">
        <h2 class="modern-title">
          <%= pageTitle %>
        </h2>

        <!-- Course Form -->
        <form action="<%= formAction %>" method="POST" class="modern-form">
          <div class="form-group">
            <label for="courseName" class="modern-label">Course Name:</label>
            <input type="text" id="courseName"
              name="courseName" value="" class="custom-input" required>

          </div>

          <div class="form-group">
            <label for="teacher" class="modern-label">Teacher:</label>
            <div>
              <div class="select-wrapper">
                <select id="teacher" name="teacher" class="select custom-select" required>
                
                </select>
                <div class="select-arrow">&#9660;</div>
                <div class="select-dropdown">
                  <!-- Dropdown options go here -->
                </div>
              </div>
            </div>


          </div>

          <button id="submitButton" type="button" class="button modern-button">
            <%= buttonLabel %>
          </button>
        </form>
      </div>

      <%- include("./partials/footer.ejs") %>


        <script>
          axios.defaults.headers.common['Authorization'] = localStorage.getItem('authentication');

          const inputCourseName = document.querySelector('#courseName');
          const select = document.querySelector('select');
          const input = document.querySelector('input');

          inputCourseName.focus();

          const baseSetup = () => {
            document.querySelector('#submitButton').addEventListener('click', () => {
              const newCourse = {
                _id: input.dataset.id,
                name: input.value,
                teacher: select.value
              };

              // Send a POST request to create a new course
              axios.post(`./api/course`, newCourse).then(res => {
                console.log(res);
                if (res.status === 200) {
                  alert('Course Created, ID: ' + res.data.id);
                } else {
                  alert('Failed to create ' + newCourse.name);
                }
              }).then(() => window.location.assign(`${window.location.origin}\\courses`)).catch(e => alert(e));
            });

          }
          const update = () => {
  document.querySelector('#submitButton').addEventListener('click', () => {
    const newCourse = {
      _id: input.dataset.id,
      name: input.value,
      teacher: select.value,
    };

    axiosPut('../api/course', newCourse, {
      headers: {
        'Content-Type': 'application/json',
      },
    })
      .then(res => res.data)
      .then(data => console.log(data))
      .catch(e => console.error(e));
  });
};




          const getCookie = async () => {
            return sessionStorage.getItem('courseId');
          }


          const setUpForm = async () => {
            const courseId = await getCookie();
            const teachers = (await axiosGet('../api/teachers')).data;
            teachers.forEach(teach => {
                console.log(teach);
                const opt = document.createElement('option');
                opt.value = teach._id;
                opt.innerText = teach.name;
                select.appendChild(opt);
              });

            if (courseId) {
              const course = (await axiosGet(`../api/course/${JSON.stringify(courseId)}`)).data;
              select.value = course.teacher;
              input.value = course.name;
              input.dataset.id = course._id;
              update();
            }
            else {
              baseSetup();
            }
            sessionStorage.clear();
          }
          setUpForm();


        </script>
        
  </body>

</html>